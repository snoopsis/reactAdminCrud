{"ast":null,"code":"var _jsxFileName = \"/home/snoopsis/nodeSites/backPortfolio/client/src/context/blog/BlogState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport BlogContext from \"./BlogContext\";\nimport BlogReducer from \"./BlogReducer\";\nimport { LIST_POSTS, POSTS_ERROR, DELETE_POST, EDITION_MODE, CLOSE_POSTS, SET_CURRENT, UPDATE_POST, ADD_POST, POST_NEW } from \"../types\";\n\nconst BlogState = props => {\n  const initialState = {\n    loading: true,\n    posts: [],\n    error: null,\n    editing: false,\n    current: null,\n    newP: false\n  };\n  const [state, dispatch] = useReducer(BlogReducer, initialState); // List Posts\n\n  const listPosts = async () => {\n    try {\n      const res = await axios.get(\"/api/blog\");\n      dispatch({\n        type: LIST_POSTS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: POSTS_ERROR\n      });\n    }\n  }; // Delete Post\n\n\n  const deletePost = async id => {\n    try {\n      await axios.delete(`/api/blog/${id}`);\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: POSTS_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Add Post\n\n\n  const addPost = async post => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/blog\", post, config);\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: POSTS_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Update Post\n\n\n  const updatePost = async post => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/blog/${post.id}`, post, config);\n      dispatch({\n        type: UPDATE_POST,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: POSTS_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Editing Mode ON\n\n\n  const editingPost = post => {\n    dispatch({\n      type: EDITION_MODE,\n      payload: post\n    });\n  }; // Editing Mode OFF\n\n\n  const closeEditing = () => {\n    dispatch({\n      type: CLOSE_POSTS\n    });\n  }; // Set Current Post\n\n\n  const currentPost = post => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: post\n    });\n  }; // Open New Post\n\n\n  const newPost = () => {\n    dispatch({\n      type: POST_NEW\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(BlogContext.Provider, {\n    value: {\n      loading: state.loading,\n      posts: state.posts,\n      error: state.error,\n      editing: state.editing,\n      current: state.current,\n      newP: state.newP,\n      listPosts,\n      deletePost,\n      editingPost,\n      closeEditing,\n      updatePost,\n      currentPost,\n      addPost,\n      newPost\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BlogState;","map":{"version":3,"sources":["/home/snoopsis/nodeSites/backPortfolio/client/src/context/blog/BlogState.js"],"names":["React","useReducer","axios","BlogContext","BlogReducer","LIST_POSTS","POSTS_ERROR","DELETE_POST","EDITION_MODE","CLOSE_POSTS","SET_CURRENT","UPDATE_POST","ADD_POST","POST_NEW","BlogState","props","initialState","loading","posts","error","editing","current","newP","state","dispatch","listPosts","res","get","type","payload","data","deletePost","id","delete","response","msg","addPost","post","config","headers","updatePost","put","editingPost","closeEditing","currentPost","newPost","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport BlogContext from \"./BlogContext\";\r\nimport BlogReducer from \"./BlogReducer\";\r\nimport {\r\n  LIST_POSTS,\r\n  POSTS_ERROR,\r\n  DELETE_POST,\r\n  EDITION_MODE,\r\n  CLOSE_POSTS,\r\n  SET_CURRENT,\r\n  UPDATE_POST,\r\n  ADD_POST,\r\n  POST_NEW\r\n} from \"../types\";\r\n\r\nconst BlogState = props => {\r\n  const initialState = {\r\n    loading: true,\r\n    posts: [],\r\n    error: null,\r\n    editing: false,\r\n    current: null,\r\n    newP: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(BlogReducer, initialState);\r\n\r\n  // List Posts\r\n  const listPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/blog\");\r\n\r\n      dispatch({\r\n        type: LIST_POSTS,\r\n        payload: res.data\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: POSTS_ERROR\r\n      });\r\n    }\r\n  };\r\n\r\n  // Delete Post\r\n  const deletePost = async id => {\r\n    try {\r\n      await axios.delete(`/api/blog/${id}`);\r\n\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: POSTS_ERROR,\r\n        payload: error.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Add Post\r\n  const addPost = async post => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/blog\", post, config);\r\n\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: POSTS_ERROR,\r\n        payload: error.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Update Post\r\n  const updatePost = async post => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.put(`/api/blog/${post.id}`, post, config);\r\n\r\n      dispatch({\r\n        type: UPDATE_POST,\r\n        payload: res.data\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: POSTS_ERROR,\r\n        payload: error.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Editing Mode ON\r\n  const editingPost = post => {\r\n    dispatch({ type: EDITION_MODE, payload: post });\r\n  };\r\n\r\n  // Editing Mode OFF\r\n  const closeEditing = () => {\r\n    dispatch({ type: CLOSE_POSTS });\r\n  };\r\n\r\n  // Set Current Post\r\n  const currentPost = post => {\r\n    dispatch({ type: SET_CURRENT, payload: post });\r\n  };\r\n\r\n  // Open New Post\r\n  const newPost = () => {\r\n    dispatch({ type: POST_NEW });\r\n  };\r\n\r\n  return (\r\n    <BlogContext.Provider\r\n      value={{\r\n        loading: state.loading,\r\n        posts: state.posts,\r\n        error: state.error,\r\n        editing: state.editing,\r\n        current: state.current,\r\n        newP: state.newP,\r\n        listPosts,\r\n        deletePost,\r\n        editingPost,\r\n        closeEditing,\r\n        updatePost,\r\n        currentPost,\r\n        addPost,\r\n        newPost\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BlogContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BlogState;\r\n"]},"metadata":{},"sourceType":"module"}