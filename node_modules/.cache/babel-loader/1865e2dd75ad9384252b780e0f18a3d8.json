{"ast":null,"code":"import _toConsumableArray from\"/home/snoopsis/nodeSites/backPortfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/snoopsis/nodeSites/backPortfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{LIST_POSTS,POSTS_ERROR,DELETE_POST,EDITION_MODE,CLOSE_POSTS,SET_CURRENT,UPDATE_POST,ADD_POST,POST_NEW}from\"../types\";export default(function(state,action){switch(action.type){case LIST_POSTS:return _objectSpread(_objectSpread({},state),{},{posts:action.payload,loading:false});case ADD_POST:return _objectSpread(_objectSpread({},state),{},{posts:[action.payload].concat(_toConsumableArray(state.posts)),loading:false,newP:false});case POSTS_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case DELETE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(posts){return posts.id!==action.payload;}),loading:false});case EDITION_MODE:return _objectSpread(_objectSpread({},state),{},{editing:true,current:action.payload});case CLOSE_POSTS:return _objectSpread(_objectSpread({},state),{},{editing:false,newP:false,current:null});case UPDATE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload.id?action.payload:post;}),loading:false,current:null,editing:false});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case POST_NEW:return _objectSpread(_objectSpread({},state),{},{newP:true,current:null});default:return state;}});","map":{"version":3,"sources":["/home/snoopsis/nodeSites/backPortfolio/client/src/context/blog/BlogReducer.js"],"names":["LIST_POSTS","POSTS_ERROR","DELETE_POST","EDITION_MODE","CLOSE_POSTS","SET_CURRENT","UPDATE_POST","ADD_POST","POST_NEW","state","action","type","posts","payload","loading","newP","error","filter","id","editing","current","map","post","_id"],"mappings":"+UAAA,OACEA,UADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,YAJF,CAKEC,WALF,CAMEC,WANF,CAOEC,WAPF,CAQEC,QARF,CASEC,QATF,KAUO,UAVP,CAYA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKX,CAAAA,UAAL,CACE,sCACKS,KADL,MAEEG,KAAK,CAAEF,MAAM,CAACG,OAFhB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKP,CAAAA,QAAL,CACE,sCACKE,KADL,MAEEG,KAAK,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,KAA5B,EAFP,CAGEE,OAAO,CAAE,KAHX,CAIEC,IAAI,CAAE,KAJR,GAMF,IAAKd,CAAAA,WAAL,CACE,sCACKQ,KADL,MAEEO,KAAK,CAAEN,MAAM,CAACG,OAFhB,GAIF,IAAKX,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEG,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYK,MAAZ,CAAmB,SAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACM,EAAN,GAAaR,MAAM,CAACG,OAAxB,EAAxB,CAFT,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKX,CAAAA,YAAL,CACE,sCACKM,KADL,MAEEU,OAAO,CAAE,IAFX,CAGEC,OAAO,CAAEV,MAAM,CAACG,OAHlB,GAKF,IAAKT,CAAAA,WAAL,CACE,sCACKK,KADL,MAEEU,OAAO,CAAE,KAFX,CAGEJ,IAAI,CAAE,KAHR,CAIEK,OAAO,CAAE,IAJX,GAMF,IAAKd,CAAAA,WAAL,CACE,sCACKG,KADL,MAEEG,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYS,GAAZ,CAAgB,SAAAC,IAAI,QACzBA,CAAAA,IAAI,CAACC,GAAL,GAAab,MAAM,CAACG,OAAP,CAAeK,EAA5B,CAAiCR,MAAM,CAACG,OAAxC,CAAkDS,IADzB,EAApB,CAFT,CAKER,OAAO,CAAE,KALX,CAMEM,OAAO,CAAE,IANX,CAOED,OAAO,CAAE,KAPX,GASF,IAAKd,CAAAA,WAAL,CACE,sCACKI,KADL,MAEEW,OAAO,CAAEV,MAAM,CAACG,OAFlB,GAIF,IAAKL,CAAAA,QAAL,CACE,sCACKC,KADL,MAEEM,IAAI,CAAE,IAFR,CAGEK,OAAO,CAAE,IAHX,GAMF,QACE,MAAOX,CAAAA,KAAP,CA7DJ,CA+DD,CAhED","sourcesContent":["import {\r\n  LIST_POSTS,\r\n  POSTS_ERROR,\r\n  DELETE_POST,\r\n  EDITION_MODE,\r\n  CLOSE_POSTS,\r\n  SET_CURRENT,\r\n  UPDATE_POST,\r\n  ADD_POST,\r\n  POST_NEW\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case LIST_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n        loading: false,\r\n        newP: false\r\n      };\r\n    case POSTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(posts => posts.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case EDITION_MODE:\r\n      return {\r\n        ...state,\r\n        editing: true,\r\n        current: action.payload\r\n      };\r\n    case CLOSE_POSTS:\r\n      return {\r\n        ...state,\r\n        editing: false,\r\n        newP: false,\r\n        current: null\r\n      };\r\n    case UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === action.payload.id ? action.payload : post\r\n        ),\r\n        loading: false,\r\n        current: null,\r\n        editing: false\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case POST_NEW:\r\n      return {\r\n        ...state,\r\n        newP: true,\r\n        current: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}