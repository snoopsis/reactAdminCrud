{"ast":null,"code":"import { LIST_POSTS, POSTS_ERROR, DELETE_POST, EDITION_MODE, CLOSE_POSTS, SET_CURRENT, UPDATE_POST, ADD_POST, POST_NEW } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case LIST_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts],\n        loading: false,\n        newP: false\n      };\n\n    case POSTS_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(posts => posts.id !== action.payload),\n        loading: false\n      };\n\n    case EDITION_MODE:\n      return { ...state,\n        editing: true,\n        current: action.payload\n      };\n\n    case CLOSE_POSTS:\n      return { ...state,\n        editing: false,\n        newP: false,\n        current: null\n      };\n\n    case UPDATE_POST:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload.id ? action.payload : post),\n        loading: false,\n        current: null,\n        editing: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case POST_NEW:\n      return { ...state,\n        newP: true,\n        current: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/snoopsis/nodeSites/backPortfolio/client/src/context/blog/BlogReducer.js"],"names":["LIST_POSTS","POSTS_ERROR","DELETE_POST","EDITION_MODE","CLOSE_POSTS","SET_CURRENT","UPDATE_POST","ADD_POST","POST_NEW","state","action","type","posts","payload","loading","newP","error","filter","id","editing","current","map","post","_id"],"mappings":"AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,QARF,EASEC,QATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELG,QAAAA,KAAK,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,KAA1B,CAFF;AAGLE,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EAAE;AAJD,OAAP;;AAMF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELO,QAAAA,KAAK,EAAEN,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYK,MAAZ,CAAmBL,KAAK,IAAIA,KAAK,CAACM,EAAN,KAAaR,MAAM,CAACG,OAAhD,CAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELU,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAHX,OAAP;;AAKF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELU,QAAAA,OAAO,EAAE,KAFJ;AAGLJ,QAAAA,IAAI,EAAE,KAHD;AAILK,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYS,GAAZ,CAAgBC,IAAI,IACzBA,IAAI,CAACC,GAAL,KAAab,MAAM,CAACG,OAAP,CAAeK,EAA5B,GAAiCR,MAAM,CAACG,OAAxC,GAAkDS,IAD7C,CAFF;AAKLR,QAAAA,OAAO,EAAE,KALJ;AAMLM,QAAAA,OAAO,EAAE,IANJ;AAOLD,QAAAA,OAAO,EAAE;AAPJ,OAAP;;AASF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELW,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKL,QAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELM,QAAAA,IAAI,EAAE,IAFD;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF;AACE,aAAOX,KAAP;AA7DJ;AA+DD,CAhED","sourcesContent":["import {\r\n  LIST_POSTS,\r\n  POSTS_ERROR,\r\n  DELETE_POST,\r\n  EDITION_MODE,\r\n  CLOSE_POSTS,\r\n  SET_CURRENT,\r\n  UPDATE_POST,\r\n  ADD_POST,\r\n  POST_NEW\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case LIST_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n        loading: false,\r\n        newP: false\r\n      };\r\n    case POSTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(posts => posts.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case EDITION_MODE:\r\n      return {\r\n        ...state,\r\n        editing: true,\r\n        current: action.payload\r\n      };\r\n    case CLOSE_POSTS:\r\n      return {\r\n        ...state,\r\n        editing: false,\r\n        newP: false,\r\n        current: null\r\n      };\r\n    case UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === action.payload.id ? action.payload : post\r\n        ),\r\n        loading: false,\r\n        current: null,\r\n        editing: false\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case POST_NEW:\r\n      return {\r\n        ...state,\r\n        newP: true,\r\n        current: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}